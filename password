#!/usr/bin/env bash

random_insert_char() {
    local arg=$1
    local arg_length=${#arg}
    declare -a all_random_nums

    for (( i=1; i<=$arg_length; i++ )); do  # iterate through each char in hashed sequence of numbers
        random_num=$(shuf -i 1-$arg_length -n 1)    # create random number from 1 to length of arg
        all_random_nums+="$random_num "
        #echo -n ${arg:i-1:1}
    done

    echo -e "\tArray:    $all_random_nums"
    set=($(echo "${all_random_nums[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' '))     # getting only unique elements
    echo -e "\tSet:      ${set[@]}" 
}

while getopts ":c:hf" option; do
    case ${option} in 
        c)  # create password 
            hash_password=$(cksum <<< ${OPTARG} | cut -f 1 -d ' ')
            echo -e "\tPassword: ${hash_password}"
            ;;
        h)  # help     
            echo -e "\tGenerate or locate password"
            echo
            echo -e "\tSyntax: password [-chf]"
            echo -e "\toptions:"
            echo -e "\tc    Create password with some hash algorithm"
            echo -e "\th    Display help page"
            echo -e "\tf    Find previously generated password"
            ;;
        f)  # finding password
            echo "finding"
            ;;
        *)  # default
            echo -e "\tpassword: illegal option -- "${1:1}""
            echo -e "\tusage: password [-chf]"
            exit 1
            ;;
        esac
done
#shift $((OPTIND-1))

random_insert_char $hash_password